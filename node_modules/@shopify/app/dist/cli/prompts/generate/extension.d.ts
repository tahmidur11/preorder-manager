import { AppInterface } from '../../models/app/app.js';
import { GenericSpecification } from '../../models/app/extensions.js';
import { ui } from '@shopify/cli-kit';
interface GenerateExtensionOptions {
    name?: string;
    extensionType?: string;
    extensionFlavor?: string;
    directory: string;
    app: AppInterface;
    extensionSpecifications: GenericSpecification[];
    reset: boolean;
}
interface GenerateExtensionOutput {
    name: string;
    extensionType: string;
    extensionFlavor?: string;
}
export declare const extensionFlavorQuestion: (specification: GenericSpecification) => ui.Question;
export declare function buildChoices(specifications: GenericSpecification[]): ({
    name: string;
    value: string;
} | {
    group: {
        name: string;
        order: number;
    };
    name: string;
    value: string;
})[];
declare const generateExtensionPrompt: (options: GenerateExtensionOptions, prompt?: <TName extends string & keyof TAnswers, TAnswers extends { [key in TName]: string; } = { [key_1 in TName]: string; }>(questions: readonly ui.Question<TName>[]) => Promise<TAnswers>) => Promise<GenerateExtensionOutput>;
export default generateExtensionPrompt;
