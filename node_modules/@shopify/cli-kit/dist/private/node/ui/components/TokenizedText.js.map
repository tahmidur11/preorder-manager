{"version":3,"file":"TokenizedText.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/components/TokenizedText.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Command} from './Command.js'\nimport {Link} from './Link.js'\nimport {List} from './List.js'\nimport {UserInput} from './UserInput.js'\nimport {FilePath} from './FilePath.js'\nimport {Subdued} from './Subdued.js'\nimport {Box, Text} from 'ink'\nimport React from 'react'\n\ninterface CommandToken {\n  command: string\n}\n\ninterface LinkToken {\n  link: {\n    label?: string\n    url: string\n  }\n}\n\ninterface CharToken {\n  char: string\n}\n\ninterface UserInputToken {\n  userInput: string\n}\n\ninterface SubduedToken {\n  subdued: string\n}\n\ninterface FilePathToken {\n  filePath: string\n}\n\ninterface ListToken {\n  list: {\n    title?: string\n    items: TokenItem[]\n    ordered?: boolean\n  }\n}\n\ntype Token = string | CommandToken | LinkToken | CharToken | UserInputToken | SubduedToken | FilePathToken | ListToken\nexport type TokenItem = Token | Token[]\n\ntype DisplayType = 'block' | 'inline'\ninterface Block {\n  display: DisplayType\n  value: Token\n}\n\nfunction tokenToBlock(token: Token): Block {\n  return {\n    display: typeof token !== 'string' && 'list' in token ? 'block' : 'inline',\n    value: token,\n  }\n}\n\nexport function tokenItemToString(token: TokenItem): string {\n  if (typeof token === 'string') {\n    return token\n  } else if ('command' in token) {\n    return token.command\n  } else if ('link' in token) {\n    return token.link.label || token.link.url\n  } else if ('char' in token) {\n    return token.char\n  } else if ('userInput' in token) {\n    return token.userInput\n  } else if ('subdued' in token) {\n    return token.subdued\n  } else if ('filePath' in token) {\n    return token.filePath\n  } else if ('list' in token) {\n    return token.list.items.map(tokenItemToString).join(' ')\n  } else {\n    return token.map(tokenItemToString).join(' ')\n  }\n}\n\nexport function appendToTokenItem(token: TokenItem, suffix: string): TokenItem {\n  return Array.isArray(token) ? [...token, suffix] : [token, suffix]\n}\n\nfunction splitByDisplayType(acc: Block[][], item: Block) {\n  if (item.display === 'block') {\n    acc.push([item])\n  } else {\n    const last = acc[acc.length - 1]\n    if (last && last[0]!.display === 'inline') {\n      last.push(item)\n    } else {\n      acc.push([item])\n    }\n  }\n  return acc\n}\n\ninterface Props {\n  item: TokenItem\n}\n\n/**\n * `TokenizedText` renders a text string with tokens that can be either strings,\n * links, and commands.\n */\nconst TokenizedText: React.FC<Props> = ({item}) => {\n  if (typeof item === 'string') {\n    return <Text>{item}</Text>\n  } else if ('command' in item) {\n    return <Command command={item.command} />\n  } else if ('link' in item) {\n    return <Link {...item.link} />\n  } else if ('char' in item) {\n    return <Text>{item.char[0]}</Text>\n  } else if ('userInput' in item) {\n    return <UserInput userInput={item.userInput} />\n  } else if ('subdued' in item) {\n    return <Subdued subdued={item.subdued} />\n  } else if ('filePath' in item) {\n    return <FilePath filePath={item.filePath} />\n  } else if ('list' in item) {\n    return <List {...item.list} />\n  } else {\n    const groupedItems = item.map(tokenToBlock).reduce(splitByDisplayType, [])\n\n    return (\n      <Box flexDirection=\"column\">\n        {groupedItems.map((items, groupIndex) => {\n          if (items[0]!.display === 'inline') {\n            return (\n              <Text key={groupIndex}>\n                {items.map((item, itemIndex) => (\n                  <Text key={itemIndex}>\n                    {itemIndex !== 0 && !(typeof item.value !== 'string' && 'char' in item.value) && <Text> </Text>}\n                    <TokenizedText item={item.value} />\n                  </Text>\n                ))}\n              </Text>\n            )\n          } else {\n            return <List key={groupIndex} {...(items[0]!.value as ListToken).list} />\n          }\n        })}\n      </Box>\n    )\n  }\n}\n\nexport {TokenizedText}\n"]}