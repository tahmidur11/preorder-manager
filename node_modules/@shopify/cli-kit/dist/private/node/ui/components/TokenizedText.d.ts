import React from 'react';
interface CommandToken {
    command: string;
}
interface LinkToken {
    link: {
        label?: string;
        url: string;
    };
}
interface CharToken {
    char: string;
}
interface UserInputToken {
    userInput: string;
}
interface SubduedToken {
    subdued: string;
}
interface FilePathToken {
    filePath: string;
}
interface ListToken {
    list: {
        title?: string;
        items: TokenItem[];
        ordered?: boolean;
    };
}
declare type Token = string | CommandToken | LinkToken | CharToken | UserInputToken | SubduedToken | FilePathToken | ListToken;
export declare type TokenItem = Token | Token[];
export declare function tokenItemToString(token: TokenItem): string;
export declare function appendToTokenItem(token: TokenItem, suffix: string): TokenItem;
interface Props {
    item: TokenItem;
}
/**
 * `TokenizedText` renders a text string with tokens that can be either strings,
 * links, and commands.
 */
declare const TokenizedText: React.FC<Props>;
export { TokenizedText };
