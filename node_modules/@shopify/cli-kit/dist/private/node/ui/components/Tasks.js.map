{"version":3,"file":"Tasks.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/components/Tasks.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,oBAAoB,CAAA;AAChD,OAAO,SAAS,MAAM,wBAAwB,CAAA;AAC9C,OAAO,kBAAkB,MAAM,mCAAmC,CAAA;AAElE,+CAA+C;AAC/C,OAAO,EAAC,GAAG,EAAE,IAAI,EAAC,MAAM,KAAK,CAAA;AAC7B,OAAO,KAAK,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAC,MAAM,OAAO,CAAA;AAE7C,MAAM,cAAc,GAAG,GAAG,CAAA;AAY1B,IAAK,UAIJ;AAJD,WAAK,UAAU;IACb,iCAAmB,CAAA;IACnB,iCAAmB,CAAA;IACnB,iCAAmB,CAAA;AACrB,CAAC,EAJI,UAAU,KAAV,UAAU,QAId;AAED,SAAS,KAAK,CAAW,EAAC,KAAK,EAAE,MAAM,GAAG,KAAK,EAA2C;IACxF,MAAM,EAAC,SAAS,EAAC,GAAG,SAAS,EAAE,CAAA;IAC/B,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACrE,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAiB,KAAK,CAAC,CAAC,CAAE,CAAC,CAAA;IACzE,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAa,UAAU,CAAC,OAAO,CAAC,CAAA;IAClE,MAAM,GAAG,GAAG,MAAM,CAAW,EAAc,CAAC,CAAA;IAE5C,MAAM,QAAQ,GAAG,KAAK,IAAI,EAAE;QAC1B,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,cAAc,CAAC,IAAI,CAAC,CAAA;YACpB,4CAA4C;YAC5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YAC3C,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,EAAE;gBACpF,KAAK,MAAM,OAAO,IAAI,MAAM,EAAE;oBAC5B,cAAc,CAAC,OAAO,CAAC,CAAA;oBACvB,4CAA4C;oBAC5C,MAAM,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;iBAChC;aACF;SACF;IACH,CAAC,CAAA;IAED,kBAAkB,CAAC,QAAQ,EAAE;QAC3B,WAAW,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC;QAC/C,UAAU,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC;KAC/C,CAAC,CAAA;IAEF,IAAI,MAAM,EAAE;QACV,OAAO,IAAI,CAAA;KACZ;IAED,OAAO,KAAK,KAAK,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CACpC,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ;QACzB,oBAAC,aAAa,IAAC,IAAI,EAAE,UAAU,GAAI;QACnC,oBAAC,IAAI;YAAE,WAAW,CAAC,KAAK;mBAAY,CAChC,CACP,CAAC,CAAC,CAAC,IAAI,CAAA;AACV,CAAC;AAED,OAAO,EAAC,KAAK,EAAC,CAAA","sourcesContent":["import {TextAnimation} from './TextAnimation.js'\nimport useLayout from '../hooks/use-layout.js'\nimport useAsyncAndUnmount from '../hooks/use-async-and-unmount.js'\n\n// import {environment} from '@shopify/cli-kit'\nimport {Box, Text} from 'ink'\nimport React, {useRef, useState} from 'react'\n\nconst loadingBarChar = 'â–€'\n\nexport interface Task<TContext = unknown> {\n  title: string\n  task: (ctx: TContext) => Promise<void | Task<TContext>[]>\n}\n\nexport interface Props<TContext> {\n  tasks: Task<TContext>[]\n  silent?: boolean\n}\n\nenum TasksState {\n  Loading = 'loading',\n  Success = 'success',\n  Failure = 'failure',\n}\n\nfunction Tasks<TContext>({tasks, silent = false}: React.PropsWithChildren<Props<TContext>>) {\n  const {twoThirds} = useLayout()\n  const loadingBar = new Array(twoThirds).fill(loadingBarChar).join('')\n  const [currentTask, setCurrentTask] = useState<Task<TContext>>(tasks[0]!)\n  const [state, setState] = useState<TasksState>(TasksState.Loading)\n  const ctx = useRef<TContext>({} as TContext)\n\n  const runTasks = async () => {\n    for (const task of tasks) {\n      setCurrentTask(task)\n      // eslint-disable-next-line no-await-in-loop\n      const result = await task.task(ctx.current)\n      if (Array.isArray(result) && result.length > 0 && result.every((el) => 'task' in el)) {\n        for (const subTask of result) {\n          setCurrentTask(subTask)\n          // eslint-disable-next-line no-await-in-loop\n          await subTask.task(ctx.current)\n        }\n      }\n    }\n  }\n\n  useAsyncAndUnmount(runTasks, {\n    onFulfilled: () => setState(TasksState.Success),\n    onRejected: () => setState(TasksState.Failure),\n  })\n\n  if (silent) {\n    return null\n  }\n\n  return state === TasksState.Loading ? (\n    <Box flexDirection=\"column\">\n      <TextAnimation text={loadingBar} />\n      <Text>{currentTask.title} ...</Text>\n    </Box>\n  ) : null\n}\n\nexport {Tasks}\n"]}