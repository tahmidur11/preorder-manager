{"version":3,"file":"ui.js","sourceRoot":"","sources":["../../../src/public/node/ui.tsx"],"names":[],"mappings":"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","sourcesContent":["import {isUnitTest} from './environment/local.js'\nimport {FatalError as Fatal} from './error.js'\nimport ConcurrentOutput from '../../private/node/ui/components/ConcurrentOutput.js'\nimport {consoleError, OutputProcess} from '../../output.js'\nimport {render, renderOnce} from '../../private/node/ui.js'\nimport {alert} from '../../private/node/ui/alert.js'\nimport {AlertProps} from '../../private/node/ui/components/Alert.js'\nimport {FatalError} from '../../private/node/ui/components/FatalError.js'\nimport ScalarDict from '../../private/node/ui/components/Table/ScalarDict.js'\nimport Table, {TableProps} from '../../private/node/ui/components/Table/Table.js'\nimport {SelectPrompt, Props as SelectPromptProps} from '../../private/node/ui/components/SelectPrompt.js'\nimport {Tasks, Task} from '../../private/node/ui/components/Tasks.js'\nimport {TextPrompt, Props as TextPromptProps} from '../../private/node/ui/components/TextPrompt.js'\nimport {Item as SelectItem, Props as SelectProps} from '../../private/node/ui/components/SelectInput.js'\nimport {Props as InfoTableProps} from '../../private/node/ui/components/Prompts/InfoTable.js'\nimport {AutocompletePrompt} from '../../private/node/ui/components/AutocompletePrompt.js'\nimport React from 'react'\nimport {RenderOptions} from 'ink'\nimport {AbortController} from '@shopify/cli-kit/node/abort'\n\ninterface RenderConcurrentOptions {\n  processes: OutputProcess[]\n  abortController?: AbortController\n  showTimestamps?: boolean\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders output from concurrent processes to the terminal with {@link ConcurrentOutput}.\n */\nexport async function renderConcurrent({\n  processes,\n  abortController,\n  showTimestamps = true,\n  renderOptions = {},\n}: RenderConcurrentOptions) {\n  return render(\n    <ConcurrentOutput\n      processes={processes}\n      abortController={abortController ?? new AbortController()}\n      showTimestamps={showTimestamps}\n    />,\n    renderOptions,\n  )\n}\n\nexport type RenderAlertOptions = Omit<AlertProps, 'type'>\n\n/**\n * Renders an information banner to the console.\n *\n * Basic:\n *\n * ```\n * ╭─ info ───────────────────────────────────────────────────╮\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n *\n * Complete:\n * ```\n * ╭─ info ───────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd santorini-goods`                            │\n * │    • To preview your project, run `npm app dev`          │\n * │    • To add extensions, run `npm generate extension`     │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                              │\n * │    • Press 'return' to open the dev docs:                │\n * │      https://shopify.dev                                 │\n * │                                                          │\n * │  Link: https://shopify.com                               │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderInfo(options: RenderAlertOptions) {\n  return alert({...options, type: 'info'})\n}\n\n/**\n * Renders a success banner to the console.\n *\n * Basic:\n *\n * ```\n * ╭─ success ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n *\n * Complete:\n * ```\n * ╭─ success ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd santorini-goods`                              │\n * │    • To preview your project, run `npm app dev`            │\n * │    • To add extensions, run `npm generate extension`       │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                                │\n * │    • Press 'return' to open the dev docs:                │\n * │      https://shopify.dev                                 │\n * │                                                          │\n * │  Link: https://shopify.com                               │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderSuccess(options: RenderAlertOptions) {\n  return alert({...options, type: 'success'})\n}\n\n/**\n * Renders a warning banner to the console.\n *\n * Basic:\n *\n * ```\n * ╭─ warning ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n *\n * Complete:\n * ```\n * ╭─ warning ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd santorini-goods`                            │\n * │    • To preview your project, run `npm app dev`          │\n * │    • To add extensions, run `npm generate extension`     │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                              │\n * │    • Press 'return' to open the dev docs:                │\n * │      https://shopify.dev                                 │\n * │                                                          │\n * │  Link: https://shopify.com                               │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderWarning(options: RenderAlertOptions) {\n  return alert({...options, type: 'warning'})\n}\n\n/**\n * Renders a Fatal error to the console inside a banner.\n *\n * ```\n * ╭─ error ──────────────────────────────────────────────────╮\n * │                                                          │\n * │  Couldn't connect to the Shopify Partner Dashboard.      │\n * │                                                          │\n * │  Check your internet connection and try again.           │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderFatalError(error: Fatal) {\n  return renderOnce(<FatalError error={error} />, 'error', consoleError)\n}\n\n/**\n * Renders a select prompt to the console.\n *\n * ```\n * ?  Associate your project with the org Castile Ventures?\n *\n *      Add:     • new-ext\n *\n *      Remove:  • integrated-demand-ext\n *               • order-discount\n *\n * \\>  (f) first\n *     (s) second\n *     (3) third\n *     (4) fourth\n *     (5) seventh\n *     (6) tenth\n *\n *     Automations\n *     (7) fifth\n *     (8) sixth\n *\n *     Merchant Admin\n *     (9) eighth\n *     (10) ninth\n *\n *     Press ↑↓ arrows to select, enter to confirm\n * ```\n */\nexport function renderSelectPrompt<T>(props: Omit<SelectPromptProps<T>, 'onSubmit'>): Promise<T> {\n  return new Promise((resolve, reject) => {\n    render(<SelectPrompt {...props} onSubmit={(value: T) => resolve(value)} />, {\n      exitOnCtrlC: false,\n    }).catch(reject)\n  })\n}\n\ninterface RenderConfirmationPromptOptions extends Pick<SelectPromptProps<boolean>, 'message' | 'infoTable'> {\n  confirmationMessage?: string\n  cancellationMessage?: string\n}\n\n/**\n * Renders a confirmation prompt to the console.\n *\n * ?  Do you want to continue?\n *\n * \\>  (y) Yes, confirm\n *     (n) No, canccel\n *\n *     Press ↑↓ arrows to select, enter to confirm\n */\nexport function renderConfirmationPrompt({\n  message,\n  infoTable,\n  confirmationMessage = 'Yes, confirm',\n  cancellationMessage = 'No, cancel',\n}: RenderConfirmationPromptOptions): Promise<boolean> {\n  const choices = [\n    {\n      label: confirmationMessage,\n      value: true,\n      key: 'y',\n    },\n    {\n      label: cancellationMessage,\n      value: false,\n      key: 'n',\n    },\n  ]\n\n  return renderSelectPrompt({\n    choices,\n    message,\n    infoTable,\n  })\n}\n\ninterface RenderAutocompletePromptProps<T> {\n  message: string\n  choices: SelectProps<T>['items']\n  infoTable?: InfoTableProps['table']\n  search?: (term: string) => Promise<SelectItem<T>[]>\n}\n\n/**\n * Renders an autocomplete prompt to the console.\n * ```\n * ?  Select a template  Type to search...\n\n * \\>  first\n *     second\n *     third\n\n *  Press ↑↓ arrows to select, enter to confirm\n * ```\n */\nexport function renderAutocompletePrompt<T>(props: RenderAutocompletePromptProps<T>): Promise<T> {\n  const newProps = {\n    search(term: string) {\n      return Promise.resolve(props.choices.filter((item) => item.label.toLowerCase().includes(term.toLowerCase())))\n    },\n    ...props,\n  }\n\n  return new Promise((resolve, reject) => {\n    render(<AutocompletePrompt {...newProps} onSubmit={(value: T) => resolve(value)} />, {\n      exitOnCtrlC: false,\n    }).catch(reject)\n  })\n}\n\n/**\n * Renders a table to the console.\n *\n * ```\n * name                      role           Identifier\n * ────────────────────────  ─────────────  ──────────\n * Dawn                      [live]         #1361\n * Studio                                   #1363\n * Debut                     [unpublished]  #1374\n * Development (1a23b4-MBP)  [development]  #1368\n * ```\n */\nexport function renderTable<T extends ScalarDict>(props: TableProps<T>) {\n  return renderOnce(<Table {...props} />)\n}\n\n/**\n * Runs async tasks and displays their progress to the console.\n */\nexport async function renderTasks<TContext>(tasks: Task<TContext>[]) {\n  return render(<Tasks tasks={tasks} silent={isUnitTest()} />)\n}\n\n/**\n * Renders a text prompt to the console.\n * ```\n * ?  What is your name?\n * \\>  John\n * ```\n */\nexport function renderTextPrompt(props: Omit<TextPromptProps, 'onSubmit'>): Promise<string> {\n  return new Promise((resolve, reject) => {\n    render(<TextPrompt {...props} onSubmit={(value: string) => resolve(value)} />, {\n      exitOnCtrlC: false,\n    }).catch(reject)\n  })\n}\n"]}